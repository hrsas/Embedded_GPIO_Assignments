void delay(void);
void display(void);

char columns[7][8] = {{0xBE, 0xBE, 0xBE, 0xB6, 0xB6, 0xB6, 0xB6, 0x80}, //W
                      {0xFF, 0x83, 0xBF, 0xBF, 0x83, 0xBF, 0xBF, 0x83}, //E
                      {0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0xBF, 0x81}, //L
                      {0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x00}, //C
                      {0xE3, 0xDD, 0xBE, 0xBE, 0xBE, 0xBE, 0xDD, 0xE3}, //O
                      {0xBE, 0x9C, 0xAA, 0xB6, 0xBE, 0xBE, 0xBE, 0xBE}, //M
                      {0xFF, 0x83, 0xBF, 0xBF, 0x83, 0xBF, 0xBF, 0x83} //E
                      };

char rows[8] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};

void delay(void) {
    for(volatile int i = 0; i < 5000; i++); 
}

void delay_1sec(void) {
    for(volatile long i = 0; i < 250000; i++);
}


void display(){
  volatile char *outF = (char*)0x31;
  volatile char *outK = (char*)0x108;
  *outF = 0x00;
  *outK = 0xFF;
  for(int i = 0; i<7; i++){
    for(int k = 0; k<50; k++){
      for(int j = 0; j<8; j++){
        *outF = 0x00;                   
        *outK = columns[i][j];          
        *outF = rows[j];
        delay();
      }
    }
    *outF = 0x00;
    *outK = 0xFF;
    delay_1sec();
  }
}